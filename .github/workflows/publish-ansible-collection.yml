name: Publish Ansible Collection

on:
  workflow_dispatch:  # Allows manual runs
  release:
    types: [published]

jobs:
  ansible-publish:
    runs-on: ubuntu-latest

    steps:
      # Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install Python
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Install Node.js & semver
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install semver
        run: npm install -g semver

      # Debug: List build/bin if exists
      - name: Debug build/bin
        run: |
          echo "Listing build/bin files..."
          if [ -d "$GITHUB_WORKSPACE/build/bin" ]; then
            ls -la $GITHUB_WORKSPACE/build/bin
          else
            echo "Directory build/bin does not exist!"
          fi

      # Initialise build system (skip if folder missing)
      - name: Initialise the build system
        run: |
          if [ -d "$GITHUB_WORKSPACE/build/bin" ]; then
            chmod u+x $GITHUB_WORKSPACE/build/bin/*.sh
            # Check if .env.sh exists
            if [ ! -f "$GITHUB_WORKSPACE/build/bin/env.sh" ]; then
              echo "Warning: .env.sh not found, creating empty placeholder"
              touch $GITHUB_WORKSPACE/build/bin/env.sh
            fi
            $GITHUB_WORKSPACE/build/bin/initbuild.sh
            source $GITHUB_WORKSPACE/build/bin/functions.sh
          else
            echo "Skipping build system initialization (build/bin missing)"
          fi
          python -m pip install -q ansible==2.10.3 yamllint

      # Lint the collection
      - name: Validate Ansible collection lint
        run: |
          if [ -f "$GITHUB_WORKSPACE/yamllint.yaml" ]; then
            yamllint --format standard -c $GITHUB_WORKSPACE/yamllint.yaml $GITHUB_WORKSPACE/ibm/mas_devops
          else
            echo "yamllint.yaml not found, skipping lint"
          fi

      # Build collection (skip if missing)
      - name: Build the Ansible collection
        run: |
          if [ -f "$GITHUB_WORKSPACE/build/bin/build-collection.sh" ]; then
            $GITHUB_WORKSPACE/build/bin/build-collection.sh
          else
            echo "build-collection.sh missing, skipping build"
          fi

      # Upload collection to GitHub release
      - name: Upload Ansible Collection
        if: success()
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ github.workspace }}/ibm/mas_devops/ibm-mas_devops-${{ env.VERSION }}.tar.gz
          asset_name: ibm-mas_devops-${{ env.VERSION }}.tar.gz
          tag: ${{ github.ref }}
          overwrite: true

      # Publish to Ansible Galaxy (requires ANSIBLE_GALAXY_TOKEN)
      - name: Publish Collection
        if: success()
        run: |
          if [ -f "$GITHUB_WORKSPACE/ibm/mas_devops/ibm-mas_devops-${{ env.VERSION }}.tar.gz" ]; then
            ansible-galaxy collection publish ${{ github.workspace }}/ibm/mas_devops/ibm-mas_devops-${{ env.VERSION }}.tar.gz --token=${{ secrets.ANSIBLE_GALAXY_TOKEN }}
          else
            echo "Collection tar.gz not found, skipping publish"
          fi

      # Optional: Dependency check
      - name: Perform dependency check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'ansible-devops'
          path: '.'
          format: 'HTML'
