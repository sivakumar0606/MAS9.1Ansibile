---
# mas_instance_id is required in order to be able to lookup for manage application resources
- name: "Fail if mas_instance_id is not provided"
  assert:
    that: mas_instance_id is defined and mas_instance_id != ""
    fail_msg: "mas_instance_id property is required"

# mas_workspace_id is required in order to be able to lookup for manage application resources
- name: "Fail if mas_workspace_id is not provided"
  assert:
    that: mas_workspace_id is defined and mas_workspace_id != ""
    fail_msg: "mas_workspace_id property is required"

# db2_instance_name is required in order to be able to lookup for manage application database
- name: "Fail if db2_instance_name is not provided"
  assert:
    that: db2_instance_name is defined and db2_instance_name != ""
    fail_msg: "db2_instance_name property is required"

# cos_type is required
- name: "Fail if cos_type is not provided"
  assert:
    that:
      - cos_type is defined and cos_type in cos_type_supported
    fail_msg: "cos_type property is required and must be set to one of the supported storage providers: {{ cos_type_supported }}"

# Check if logging is already setup for ManageWorkspace
- name: "Lookup ManageWorkspace CR to check if logging is already setup"
  no_log: true
  kubernetes.core.k8s_info:
    api_version: v1
    kind: ManageWorkspace
    name: "{{ mas_instance_id }}-{{ mas_workspace_id }}"
    namespace: "mas-{{ mas_instance_id }}-manage"
  register: managews_output

# only need to setup logging if that's not yet set
- name: "Running {{ cos_type }} logging configuration for Manage application"
  include_tasks: "tasks/setup-manage-logging.yml"
  when:
    - managews_output.resources[0].spec.settings.deployment.loggingS3Destination is not defined
    - managews_output.resources[0].spec.settings.deployment.loggingS3Destination.accessKey is not defined
