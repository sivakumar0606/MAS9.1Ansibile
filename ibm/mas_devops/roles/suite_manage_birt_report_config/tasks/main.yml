---
# mas_instance_id is required in order to be able to lookup for manage application resources
- name: "Fail if mas_instance_id is not provided"
  assert:
    that: mas_instance_id is defined and mas_instance_id != ""
    fail_msg: "mas_instance_id property is required"

# mas_workspace_id is required in order to be able to lookup for manage application resources
- name: "Fail if mas_workspace_id is not provided"
  assert:
    that: mas_workspace_id is defined and mas_workspace_id != ""
    fail_msg: "mas_workspace_id property is required"

- name: Set manage_workspace_cr_name
  when: manage_workspace_cr_name is not defined or manage_workspace_cr_name == ''
  set_fact:
    manage_workspace_cr_name: "{{ mas_instance_id }}-{{ mas_workspace_id }}"

- name: "Lookup ManageWorkspace CR"
  no_log: true
  kubernetes.core.k8s_info:
    api_version: v1
    kind: ManageWorkspace
    name: "{{ manage_workspace_cr_name }}"
    namespace: "mas-{{ mas_instance_id }}-manage"
  register: managews_output

# Configure Manage Doclinks
# ---------------------------------------------------------------------------------------------------------------------
- name: "Running BIRT report configuration for Manage application"
  include_tasks: "tasks/setup-manage-birt-report.yml"

# Wait for ManageWorkspace CR to reconcile and to be ready
# ---------------------------------------------------------------------------------------------------------------------
- name: "Wait for ManageWorkspace to be ready (60s delay)"
  kubernetes.core.k8s_info:
    api_version: v1
    name: "{{ manage_workspace_cr_name }}"
    namespace: "mas-{{mas_instance_id}}-manage"
    kind: "ManageWorkspace"
    wait: true
    wait_condition:
      status: "True"
      type: Ready
    wait_sleep: 30
    wait_timeout: 200 # before we give up and fall back into the retry loop
  register: app_cr_result
  retries: 60
  delay: 60 # seconds
  until:
    - app_cr_result.resources is defined
    - app_cr_result.resources | length > 0
    - app_cr_result.resources | json_query('[*].status.conditions[?type==`Running`][].reason') | select ('match','Successful') | list | length == 1
