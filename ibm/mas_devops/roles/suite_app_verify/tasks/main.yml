---
# 1. Check for undefined properties that do not have a default
# -----------------------------------------------------------------------------
- name: "Assert that mas_instance_id is defined"
  assert:
    that:
      - mas_instance_id is defined and mas_instance_id != ""
    fail_msg: "mas_instance_id is required"

# 2. Provide debug information
# -----------------------------------------------------------------------------
- name: "Debug information"
  debug:
    msg:
      - "MAS Instance ID ......................... {{ mas_instance_id }}"
      - "MAS Workspace ID ........................ {{ mas_workspace_id }}"
      - "Application Workspace API Version ....... {{ mas_app_ws_apiversion }}"
      - "Application Workspace Kind .............. {{ mas_app_ws_kind }}"
      - "Application Namespace ................... {{ mas_app_namespace }}"
      - "Retries ................................. {{ mas_app_cfg_retries }}"
      - "Delay ................................... {{ mas_app_cfg_delay }}"

# 3. Wait for application workspace to be ready
# -----------------------------------------------------------------------------
- name: "Wait for application workspace to be ready ({{ mas_app_cfg_delay }}s delay)"
  kubernetes.core.k8s_info:
    api_version: "{{ mas_app_ws_apiversion }}"
    kind: "{{ mas_app_ws_kind }}"
    name: "{{ mas_instance_id }}-{{ mas_workspace_id }}"
    namespace: "{{ mas_app_namespace }}"
    wait: yes
    wait_condition:
      status: "True"
      type: Ready
    wait_sleep: 30
    wait_timeout: 120 # before we give up and fall back into the retry loop
  register: app_ws_cr_result
  retries: "{{ mas_app_cfg_retries }}"
  delay: "{{ mas_app_cfg_delay }}"
  until:
    - app_ws_cr_result.resources is defined
    - app_ws_cr_result.resources | length > 0
    - app_ws_cr_result.resources | json_query('[*].status.conditions[?type==`Ready`][].status') | select ('match','True') | list | length == 1
