---
# Set read only and read write users
# -----------------------------------------------------------------------------
- name: "Customer Files: Set aws read-write username"
  set_fact:
    aws_custfiles_read_write_username: "{{ aws_bucket_name }}-sid-rw"
  when:
    - aws_custfiles_read_write_username is not defined or aws_custfiles_read_write_username == ''

- name: "Customer Files: Create policy to access the bucket in read-write mode"
  import_role:
    name: ibm.mas_devops.aws_policy
  vars:
    aws_policy_name: "{{ aws_custfiles_read_write_username }}-read-write-policy"
    aws_policy_statement:
      - Sid: VisualEditor0
        Effect: Allow
        Action:
          - s3:GetObject
          - s3:ListBucket
          - s3:DeleteObject
          - s3:PutObject
        Resource:
          - "arn:aws:s3:::{{ custfiles_bucketname }}/*"
          - "arn:aws:s3:::{{ custfiles_bucketname }}"
          - "arn:aws:s3:::{{ custfiles_bucketname_backup }}/*"
          - "arn:aws:s3:::{{ custfiles_bucketname_backup }}"
          - "arn:aws:s3:::{{ custfiles_bucketname_recovery }}/*"
          - "arn:aws:s3:::{{ custfiles_bucketname_recovery }}"

- set_fact:
    s3readwrite_policy_arn: "{{ s3_policy_arn }}"

# Create AWS Users to access the bucket
# -----------------------------------------------------------------------------
# For custfiles, read-only user is not needed, if it is in the future we can uncomment the below step
- name: "Customer Files: Create AWS IAM User and attach policies to access the 3 buckets in read-write mode"
  import_role:
    name: ibm.mas_devops.aws_user_creation
  vars:
    aws_username: "{{ aws_custfiles_read_write_username }}"
    aws_username_create_access_key_flag: True
    aws_policy_arn: "{{ s3readwrite_policy_arn }}"
    aws_username_access_key_id: "{{ aws_custfiles_read_write_username_access_key_id }}"
    aws_username_secret_access_key: "{{ aws_custfiles_read_write_username_secret_access_key }}"

- set_fact:
    aws_custfiles_read_write_username_access_key_id: "{{ aws_new_user_access_key_id }}"
    aws_custfiles_read_write_username_secret_access_key: "{{ aws_new_user_secret_access_key }}"

# For AWS, the IAM credentials for the read-write granted user / access point will provided by standard
- name: "Customer Files: Set access key id & secret access key variables"
  set_fact:
    cos_access_key_id: "{{ aws_custfiles_read_write_username_access_key_id }}"
    cos_secret_access_key: "{{ aws_custfiles_read_write_username_secret_access_key }}"
    cos_username: "{{ aws_custfiles_read_write_username }}"
